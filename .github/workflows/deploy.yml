name: CI-CD

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # 1) 소스 가져오기
    - uses: actions/checkout@v4

    # 2) buildx 세팅
    - uses: docker/setup-buildx-action@v3

    # 3) GHCR 로그인
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # 4-A) backend-java 이미지
    - name: Build & Push backend-java
      uses: docker/build-push-action@v5
      with:
        context: ./backend-java
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.OWNER }}/one-more-coin/backend-java:${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.OWNER }}/one-more-coin/backend-java:latest

    # 4-B) backend-python 이미지
    - name: Build & Push backend-python
      uses: docker/build-push-action@v5
      with:
        context: ./backend-python
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.OWNER }}/one-more-coin/backend-python:${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.OWNER }}/one-more-coin/backend-python:latest

    # 4-C) frontend 이미지
    - name: Build & Push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.OWNER }}/one-more-coin/frontend:${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.OWNER }}/one-more-coin/frontend:latest

    # 5) mini-pc 배포
    - name: Deploy to mini-pc
      uses: appleboy/ssh-action@v1
      with:
        host:     ${{ secrets.APP_HOST }}   # e.g. home.one-more-coin.com
        username: ${{ secrets.APP_USER }}   # e.g. deploy
        key:      ${{ secrets.APP_KEY }}    # PEM RSA 개인키
        port:     10000                        # 바꿨다면 수정
        script: |
          cd ~/app
          docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker compose pull
          docker compose up -d --remove-orphans
          docker image prune -f
